<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="oxygen_framework_kaskade">
    <title>oxygen_framework</title>
    <shortdesc>Ein Framwork in definiert Editionsrichtlinien und die Benutzungsoberfläche in
        Oxygen.</shortdesc>
    <conbody>
        <section>
            <title>Framework</title>
            <p>Im Framework sind die Benutzungsoberfläche und die Editionsrichtlinien für bestimmte
                Dokumententypen definiert. Das Framwork assoziert einen Dokumententyp oder eine
                definierte Gruppe an Dokumententypen u.a. mit CSS stylesheets,
                Validierungs-Schematas, Vorlagen für neue Dokumente und Tranformationsszenarios. Für
                Ihr eigenes Projekt können Sie das mitgelieferte ediarum-Framework erweitern ein
                eigenes Framework, in dem Sie individuell die Werkzeugleiste, die Editionsansicht
                und Vorlagen einstellen können. Dafür passen Sie im Oxygen-Author  über die
                Dokumenttypen-Zuordnung die Frameworkkonfiguration an. Mehr Informationen zur
                Erstellung und Erweiterung finden Sie unter den weiterführenden Links.</p>
            
        </section>
        <section>
            <title>Framework Kaskade</title>
            <p>ediarum.basis arbeitet mit dem DTA-Basisformat, was ein Subset von TEI ist. Ein
                projektspezifisches Framework baut auf dem Framework ediarum.basis auf.</p>
        </section>
    </conbody>
    <related-links scope="external" format="html">
        <link href="http://digiversity.net/2013/tutorial-wie-baue-ich-ein-oxygen-xml-framework/">
            <linktext>Tutorial: Wie baue ich ein eigenes Framework für Oxygen XML?</linktext>
        </link>
        <link href="https://www.oxygenxml.com/doc/versions/19.1/ug-author/topics/dg-complex-customization-tutorial.html#dg-complex-customization-tutorial">
            <linktext>Oxygen-Anleitung zur Anpassung eines Frameworks</linktext>
        </link>
    </related-links>
    
    <!-- TODO:
    
    Folgende Inhalte in irgendeiner (visuellen) Form noch einarbeiten:

<p>Framework-Zusammenhang zwischen:</p>
        <ul>
            <li>Template</li>
            <li>Schema</li>
            <li>Anwendungslayout</li>
            <li>CSS</li>
            <li>Editorvariablen</li>
            <li>Vorgänge/Aktionen/Operationen</li>
        </ul>
    
     <section>
            <title>Aufbau und Funktionsweise eines Frameworks in Oxygen Aufbau </title>
            <p>Für eine Software mit interaktiven GUI-Elementen muss immer folgendes “programmiert”
                werden:</p>
            <p>Datenstruktur (Model) – Erklärung, Beispiel</p>
            <p>Anzeigeelement (View) – Erklärung, Beispiel</p>
            <p>[evtl. ein typisches Beispiel aus der Editionswelt durch alle diese drei Schichten
                anführen.]</p>
            <p>Oxygen liefert die Grundprogrammierung mit, z.B. Bausteine für Hintergrundabläufe. Es
                liefert außerdem die GUI mit, über die man aus diesen Bausteinen seine eigenen
                GUI-Funktionalitäten zusammenbauen kann.</p>
            <p>Tabelle mit den Spalten: Wofür [?] - Worin steht das, wo liegt das bzw. woher liest
                Oxygen das? - Wo definiere ich es (GUI)? Welche Oxygen-Komponenten (Bibliotheken?,
                Dependencies?) benutze ich für die Definition (z.B. ....jar)?</p>
        </section>
        <section>
            <title>Einstellungen, damit Oxygen es benutzen kann</title>
            <p>[Verstehen, was genau die Beziehung zwischen Projekt und Framework(s) ist]</p>
            <ul>
                <li>zwei Ebenen, auf denen in Oxygen eigene Konfigurationen gespeichert werden: xpr
                    (“Projekt”) und Framework. Ein xpr kann mehrere Frameworks benutzen. [Wenn
                    ediarum.BASE und .REGISTER extra nicht mit ins bundle sollen, damit
                    sichergestellt werden kann, dasz leute die ein editionsbundle fuer ihren oxygen
                    bekommen auch jeweils aktuelle releases von BASE und REGISTER verwenden, warum
                    ist es dann relevant dasz konfigurationen auf framework ebene abgelegt werden
                    koennen?]</li>
                <li>In Oxygen Ort angeben für Arbeitsordner, Frameworkordner und z.T. Dateien</li>
                <li>Oxygen-Einstellungen, die für ediarum in die xpr gehen sollen, wo Sie das angeben (Einstellungen projektspezifisch speichern),
                    wo die xpr liegt</li>
            </ul>
            <p>Oxygen liefert von Hause aus verschiedenste Frameworks mit. Die entsprechenden
                Dateien liegen im Installations-Ordner von Oxygen.</p>
            <p>Für Ihre eigenen Frameworks können Sie die Dateien ebenfalls dort ablegen, pro Framework gibt es einen Ordner (Framework-Ordner).
                Sie können aber auch an einem anderen Ort einen Ordner für Ihre eigenen Frameworks anlegen.
                Die Vorteile: nicht so umständlich zu erreichen, klar getrennt, Add-On sauber herstellbar?
                [oder welche Vor- und Nachteile gibt es?] Diesen Ordner nennen wir hier “Arbeitsordner”.</p>
            <p> </p>
        </section>
        
    
    -->
    
</concept>
