<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="oxygen_framework_kaskade" xml:lang="de-DE">
    <title>Über Oxygen-Frameworks und ediarum-Spezifika</title>
    <shortdesc>Die <i>Oxygen</i>-Dokumentation beschreibt das grundsätzliche Vorgehen für die
        Konfiguration via sogenannten "Frameworks". Ediarum enthält einige spezifische
        Konfigurationskomponenten.</shortdesc>
    <conbody>
        <section>
            <title>Framework</title>
            <p>Im Framework sind die <i>Oxygen</i>-Benutzungsoberflächen für bestimmte
                Dokumententypen (z.B. Brief, Manuskript, Notizbuch) definiert, d.h. die
                Werkzeugleiste, die Editionsansicht und die Vorlagen. Das Framework assoziiert einen
                Dokumententyp oder eine definierte Gruppe an Dokumententypen u.a. mit CSS
                stylesheets, Validierungs-Schematas, Vorlagen für neue Dokumente und
                Tranformationsszenarios. In Ihrem eigenen Erweiterungs-Framework können Sie eigene
                Elemente für die Oxygen-Benutzungsoberfläche konfigurieren.</p>
            
        </section>
        <section><title>Konfigurationskomponenten</title>
            <p>Im Hintergrund besteht das Framework aus einer Sammlung von Dateien. Einige Aspekte
                der Konfiguration nehmen Sie direkt in den Dateien vor, für andere benutzen Sie das
                    <uicontrol>Dokumenttypen</uicontrol> Fenster.</p>
            
            <table
                frame="all" rowsep="1" colsep="1" id="table_uzk_myb_pfb">
                <title>Konfigurationskomponenten</title>
                <tgroup cols="4">
                    <colspec colname="c1" colnum="1" colwidth="1*"/>
                    <colspec colname="c2" colnum="2" colwidth="1.31*"/>
                    <colspec colname="c3" colnum="3" colwidth="1*"/>
                    <colspec colnum="4" colname="c4" colwidth="1.32*"/>
                    <thead>
                        <row>
                            <entry>Komponente</entry>
                            <entry/>
                            <entry>Speicherung</entry>
                            <entry>Änderung</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>Was können Sie konfigurieren?</entry>
                            <entry/>
                            <entry>Wo speichert Oxygen Ihre Konfigurationen?</entry>
                            <entry>Auf welchem Weg können Sie die Konfigurationen ändern?</entry>
                        </row>
                        <row>
                            <entry>Schema</entry>
                            <entry>XML-Schema (Strukturvorgaben)</entry>
                            <entry>.rng-Datei</entry>
                            <entry>Die rng-Datei bearbeiten</entry>
                        </row>
                        <row>
                            <entry>Template</entry>
                            <entry>Vorlage für neue XML-Dokumente</entry>
                            <entry>.xml-Datei</entry>
                            <entry>Die xml-Datei bearbeiten</entry>
                        </row>
                        <row>
                            <entry>GUI-Funktionalitäten</entry>
                            <entry>GUI-Elemente und -Funktionalitäten, die Oxygen dann im
                                Autor-Modus bereitstellt</entry>
                            <entry>.framework-Datei</entry>
                            <entry>Im <uicontrol>Autor</uicontrol> Tab des
                                    <uicontrol>Dokumenttypen</uicontrol> Fensters: <menucascade>
                                    <uicontrol>Optionen</uicontrol>
                                    <uicontrol>Einstellungen</uicontrol>
                                    <uicontrol>Dokumenttypen-Zuordnung</uicontrol>
                                </menucascade>, Framework auswählen</entry>
                        </row>
                    </tbody>
                </tgroup>
            </table></section>
        <section>
            <title>ediarum-Spezifika für die Konfiguration per Framework</title>
            <p>Ableitungsstruktur: <i>ediarum.BASE.edit</i> arbeitet mit dem Datenmodell des
                DTA-Basisformats (Subset von TEI-XML) und erweitert dieses an einigen Punkten. Für
                Ihr Editionsprojekt erweitern Sie wiederum das Datenmodell von
                    <i>ediarum.BASE.edit</i>. Das Datenmodell für Ihr Editionsprojekt enthält also
                am Ende unterschiedlich generische Anteile, die voneinander abgeleitet sind:
                DTA-Basisformat > ediarum.BASE.edit > projektspezifische Schema-Anteile.
                Entsprechend dieser Ableitungsstruktur beim Datenmodell sind auch die Frameworks
                voneinander abgeleitet. </p>
            <p>Dateinamen und Ordnerstrukturen: Für die Benennung und den Ablageort der
                Konfigurationsdateien folgt <i>ediarum</i> eigenen Konventionen, unter anderem, um
                eine einfache gebündelte Auslieferung eines Frameworks zu ermöglichen. Orientieren
                Sie sich an Struktur und Inhalten des <i>ediarum.BASE.edit</i> Ordners.</p>
            <p><i>Oxygen</i>-"Operationen": Die GUI-Funktionalitäten werden aus sogenannten
                "Operationen" zusammengebaut. Die Datei <i>ediarum.jar</i> enthält
                <i>ediarum</i>-spezifische Operationen, die Sie benutzen können.</p>
   
        </section>
    </conbody>
    <related-links scope="external" format="html">
        <link href="https://www.oxygenxml.com/doc/versions/19.1/ug-author/topics/dg-complex-customization-tutorial.html#dg-complex-customization-tutorial">
            <linktext>Oxygen-Anleitung zur Anpassung eines Frameworks</linktext>
        </link>
        <link href="http://digiversity.net/2013/tutorial-wie-baue-ich-ein-oxygen-xml-framework/">
            <linktext>Tutorial: Wie baue ich ein eigenes Framework für Oxygen XML?</linktext>
        </link>
    </related-links>
    
    <!-- TODO:
    
    Folgende Inhalte in irgendeiner (visuellen) Form noch einarbeiten:

<p>Framework-Zusammenhang zwischen:</p>
        <ul>
            <li>Template</li>
            <li>Schema</li>
            <li>Anwendungslayout</li>
            <li>CSS</li>
            <li>Editorvariablen</li>
            <li>Vorgänge/Aktionen/Operationen</li>
        </ul>
    
     <section>
            <title>Aufbau und Funktionsweise eines Frameworks in Oxygen Aufbau </title>
            <p>Für eine Software mit interaktiven GUI-Elementen muss immer folgendes “programmiert”
                werden:</p>
            <p>Datenstruktur (Model) – Erklärung, Beispiel</p>
            <p>Anzeigeelement (View) – Erklärung, Beispiel</p>
            <p>[evtl. ein typisches Beispiel aus der Editionswelt durch alle diese drei Schichten
                anführen.]</p>
            <p>Oxygen liefert die Grundprogrammierung mit, z.B. Bausteine für Hintergrundabläufe. Es
                liefert außerdem die GUI mit, über die man aus diesen Bausteinen seine eigenen
                GUI-Funktionalitäten zusammenbauen kann.</p>
            <p>Tabelle mit den Spalten: Wofür [?] - Worin steht das, wo liegt das bzw. woher liest
                Oxygen das? - Wo definiere ich es (GUI)? Welche Oxygen-Komponenten (Bibliotheken?,
                Dependencies?) benutze ich für die Definition (z.B. ....jar)?</p>
        </section>
        <section>
            <title>Einstellungen, damit Oxygen es benutzen kann</title>
            <p>[Verstehen, was genau die Beziehung zwischen Projekt und Framework(s) ist]</p>
            <ul>
                <li>zwei Ebenen, auf denen in Oxygen eigene Konfigurationen gespeichert werden: xpr
                    (“Projekt”) und Framework. Ein xpr kann mehrere Frameworks benutzen. [Wenn
                    ediarum.BASE und .REGISTER extra nicht mit ins bundle sollen, damit
                    sichergestellt werden kann, dasz leute die ein editionsbundle fuer ihren oxygen
                    bekommen auch jeweils aktuelle releases von BASE und REGISTER verwenden, warum
                    ist es dann relevant dasz konfigurationen auf framework ebene abgelegt werden
                    koennen?]</li>
                <li>In Oxygen Ort angeben für Arbeitsordner, Frameworkordner und z.T. Dateien</li>
                <li>Oxygen-Einstellungen, die für ediarum in die xpr gehen sollen, wo Sie das angeben (Einstellungen projektspezifisch speichern),
                    wo die xpr liegt</li>
            </ul>
            <p>Oxygen liefert von Hause aus verschiedenste Frameworks mit. Die entsprechenden
                Dateien liegen im Installations-Ordner von Oxygen.</p>
            <p>Für Ihre eigenen Frameworks können Sie die Dateien ebenfalls dort ablegen, pro Framework gibt es einen Ordner (Framework-Ordner).
                Sie können aber auch an einem anderen Ort einen Ordner für Ihre eigenen Frameworks anlegen.
                Die Vorteile: nicht so umständlich zu erreichen, klar getrennt, Add-On sauber herstellbar?
                [oder welche Vor- und Nachteile gibt es?] Diesen Ordner nennen wir hier “Arbeitsordner”.</p>
            <p> </p>
        </section>
        
    
    -->
    
</concept>
