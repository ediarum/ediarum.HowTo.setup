<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_gyn_ddv_1z">
 <title>ediarum-Anpassung</title>
 <conbody>
  <p><b>Schemata</b></p>
  <p>Im Ordner <xref
    href="http://telotadev.bbaw.de:9121/exist/apps/ediarum/data.html?root=/db/apps/ediarum&amp;node=schemata"
    format="html" scope="external">schemata</xref> liegt das Schema TEI P5 2.5.0. Weitere
   projektbezogene Schemata können dort hinzugefügt werden.</p>
  <p><b>Register</b></p>
  <p>Im Ordner <xref href="http://telotadev.bbaw.de:9121/exist/apps/ediarum/data.html?node=Register"
    format="html" scope="external">Register</xref> werden die notwendigen Registerdateien
   gespeichert. Bei Veränderungen der Dateien wird eine Kopie im Ordner <xref
    href="http://telotadev.bbaw.de:9121/exist/apps/ediarum/data.html?root=/db/apps/ediarum&amp;node=data_copy"
    format="html" scope="external">data_copy</xref> gespeichert, damit dort von <b>bot2</b> aus dem
    <xref href="http://oxygenxml.com/xml_author.html" format="html" scope="external">Oxygen XML
    Author</xref> heraus ein Lesezugriff erfolgen kann. Die Kopien werden über einen Trigger
   gesteuert, der bei Installation der ediarum-App eingerichtet wird (s. <xref
    href="http://telotadev.bbaw.de:9121/exist/apps/ediarum/dokumentation.html?_cache=no#ediarum"
    format="html" scope="external">Installation</xref> bzw. <xref
    href="http://telotadev.bbaw.de:9121/exist/apps/ediarum/dokumentation.html?_cache=no#routinen"
    format="html" scope="external">Routinen</xref>).</p>
  <p><b>Routinen und xQuery-Skripte</b></p>
  <p>xQuery-Skripte werden im Ordner Routinen abgelegt. Zu Testzwecken existiert dort schon das
   Skript <xref
    href="http://telotadev.bbaw.de:9121/exist/apps/eXide/index.html?open=/db/apps/ediarum/routinen/test.xql"
    format="html" scope="external">test.xql</xref>, an welchem Ausgaben und Funktionen ausprobiert
   werden können. Im ediarum-Modul, welches in der Datei <xref
    href="http://telotadev.bbaw.de:9121/exist/apps/eXide/index.html?open=/db/apps/ediarum/modules/ediarum.xql"
    format="html" scope="external">ediarum.xql</xref> liegt, sind zentrale Funktionen vordefiniert,
   die in die Skript über die Zeile</p>
  <p>
   <pre>import module namespace ediarum="http://www.bbaw.de/telota/software/ediarum/ediarum-app" at "../modules/ediarum.xql";</pre>
  </p>
  <p>in das aktuelle Skript geladen werden können. In der Datei <xref
    href="http://telotadev.bbaw.de:9121/exist/apps/eXide/index.html?open=/db/apps/ediarum/setup/setup.xml"
    format="html" scope="external">setup.xml</xref> im Ordner <xref
    href="http://telotadev.bbaw.de:9121/exist/apps/ediarum/data.html?root=/db/apps/ediarum&amp;node=setup"
    format="html" scope="external">setup</xref> enthält die globalen Variablen für die Routinen.
   Dort müssen Passwort von bot1 und der Pfad für den data_copy-Ordner eingegeben werden, wenn sie
   geändert wurden.</p>
  <div><b>Trigger</b><p>Für eXist-db können verschiedene Trigger eingerichtet werden, die bei
    bestimmten Ereignissen ausgeführt werden, etwa wenn Dateien in einem bestimmten Ordner erstellt
    oder verändert werden (s. <xref href="http://telotadev.bbaw.de:9121/exist/apps/doc/triggers.xml"
     format="html" scope="external">Trigger</xref>).</p><p>Die Trigger sind praktisch, falls man
    Daten in verschiedenen Dateien verwaltet, die aber auch gemeinsam benutzt werden sollen. Dies
    ist z. B. bei Registern der Fall, wo jeder Registereintrag in einer eigenen Datei gespeichert
    wird. Die verschiedenen Dateien lassen sich durch einen Trigger mit einem xQuery zusammenführen
    und separat speichern. Ein anderes Beispiel sind Dateien auf die auch ein Lesezugriff existieren
    soll, wenn an ihnen gearbeitet wird. Auch hier lassen sich die Dateien durch einen Trigger und
    entsprechendes xQuery-Skript separat speichern.</p><p>Trigger für den Ordner
     <b>/db/mein/Pfad</b> und dessen Subordner lassen sich einrichten, indem im
     Ordner<b>/db/system/config/db/mein/Pfad</b> eine Datei <b>collection.xconf</b> abgelegt wird,
    die etwa auf eine xQuery-Datei verweisen kann. Diese muss zum Trigger-Namespace gehören und kann
    verschiedene Aktionen definieren (s. <xref
     href="http://telotadev.bbaw.de:9121/exist/apps/doc/triggers.xml#D2.2.5.3" format="html"
     scope="external">xQuery-Funktionen</xref>). Die Einrichtung wird im folgenden an einem Beispiel
    erläutert.</p><p>Beispiel: Jeder Registereintrag eines gemeinsamen Register liegt in einer
    eigenen Datei. Nach der Erstellung eines Registereintrags (d.h. einer neuen Datei im Ordner
    Register) oder einer Änderung in einer solchen Datei soll ein neues Gesamtregister erstellt
    werden, das alle Einträge des Registers mit der ID enthält.</p><p>Im Ordner <xref
     href="http://telotadev.bbaw.de:9121/exist/apps/ediarum/data.html?root=/db&amp;amp;node=system/config/db/Register"
     format="html" scope="external">/db/system/config/db/Register</xref> wird eine Datei <xref
     href="http://telotadev.bbaw.de:9121/exist/apps/eXide/index.html?open=/db/apps/ediarum/../../system/config/db/Register/collection.xconf"
     format="html" scope="external">collection.xconf</xref> mit folgendem Inhalt
    gespeichert:</p><pre>&lt;collection xmlns="http://exist-db.org/collection-config/1.0">
    &lt;triggers>
        &lt;trigger class="org.exist.collections.triggers.XQueryTrigger">
            &lt;parameter name="url" value="xmldb:exist://db/apps/ediarum/routinen/registerTrigger.xql"/>
        &lt;/trigger>
    &lt;/triggers>
&lt;/collection></pre><p>Die
    im Ordner <xref
     href="http://telotadev.bbaw.de:9121/exist/apps/ediarum/data.html?root=/db/apps/ediarum&amp;amp;node=routinen"
     format="html" scope="external">/db/apps/ediarum/routinen</xref> liegende xQuery-Datei <xref
     href="http://telotadev.bbaw.de:9121/exist/apps/eXide/index.html?open=/db/apps/ediarum/routinen/registerTrigger.xql"
     format="html" scope="external">registerTrigger.xql</xref> gehört zum Namespace trigger und
    definiert einige Trigger, die die gewünschten Aktionen
    durchführen:</p><pre>xquery version "1.0";

module namespace trigger="http://exist-db.org/xquery/trigger";
  ...

declare function local:cumulateIndex($url) {
   ...
};

declare function trigger:after-create-document($uri as xs:anyURI) {
  local:cumulateIndex($uri)
};

declare function trigger:after-update-document($uri as xs:anyURI) {
  local:cumulateIndex($uri)
};</pre><p>Die
    auszuführenden xQueries müssen über die im Trigger angegebene URL erreichbar sein, d.h. sie
    müssen auch mit Gastrechten ausführbar sein</p></div>
 </conbody>
</concept>
